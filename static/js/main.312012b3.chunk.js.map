{"version":3,"sources":["components/lineChart.js","components/boxPlot.js","components/table.js","components/heatMap.js","App.js","jsonParser.js","serviceWorker.js","index.js"],"names":["LineChart","lineChartData","series","i","length","push","name","data","createLineChartSeries","this","props","options","chart","type","zoom","enabled","autoScaleYaxis","toolbar","autoSelected","colors","dataLabels","title","text","align","yaxis","labels","formatter","value","toFixed","xaxis","categories","width","Component","BoxPlot","plot_data","boxPlotData","y","layout","height","MetricTable","headerLabels","tableData","header","TableCell","style","fontWeight","rowEntries","rows","rowEntry","component","scope","j","TableRow","key","TableContainer","Table","TableHead","TableBody","HeatMap","heatMapData","data_series","x","createHeatMapSeries","legend","show","document","body","theme","createMuiTheme","palette","primary","blue","secondary","deepOrange","App","state","classes","figures","components","forEach","table","lineChart","heatMap","boxPlot","parse","ThemeProvider","className","root","AppBar","position","Toolbar","Typography","variant","noWrap","onChange","event","reader","FileReader","onload","setState","target","JSON","result","readAsText","files","cards","map","figure","Paper","elevation","padding","margin","React","withStyles","flexGrow","display","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","common","white","marginLeft","spacing","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","transition","transitions","create","maxWidth","flexWrap","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iVAoEeA,E,iLAXP,IA3CwBC,EA2CpBC,EAtDZ,SAA+BD,GAE3B,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIF,EAAa,OAAWG,OAAQD,IAChDD,EAAOG,KAAK,CACRC,KAAML,EAAa,aAAiBE,GACpCI,KAAMN,EAAa,OAAWE,KAGtC,OAAOD,EA8CUM,CAAsBC,KAAKC,MAAMT,eAC1CU,EA3CD,CACHC,MAAO,CACHC,KAAM,OAENC,KAAM,CACFD,KAAM,IACNE,SAAS,EACTC,gBAAgB,GAEpBC,QAAS,CACLC,aAAc,SAGtBC,OAAQ,CAAC,UAAW,WACpBC,WAAY,CACRL,SAAS,GAEbM,MAAO,CACHC,MAnBoBrB,EA4CaQ,KAAKC,MAAMT,eAzBzB,MACnBsB,MAAO,QAEXC,MAAO,CACHH,MAAO,CACHC,KAAMrB,EAAa,YAEvBwB,OAAQ,CACJC,UAAW,SAAUC,GACnB,OAAOA,EAAMC,QAAQ,MAI/BC,MAAO,CACHC,WAAY7B,EAAa,WACzBoB,MAAO,CACHC,KAAMrB,EAAa,cAU3B,OAAO,kBAAC,IAAD,CACHU,QAASA,EACTT,OAAQA,EACRW,KAAK,OACLkB,MAAM,Y,GARMC,a,iBCpCTC,E,iLAbP,IADA,IAAIC,EAAY,GACP/B,EAAI,EAAGA,EAAIM,KAAKC,MAAMyB,YAAX,OAAiC/B,OAAQD,IACzD+B,EAAU7B,KAAK,CACX+B,EAAG3B,KAAKC,MAAMyB,YAAX,OAAiChC,GACpCG,KAAMG,KAAKC,MAAMyB,YAAX,OAAiChC,GACvCU,KAAM,QAId,OAAO,kBAAC,IAAD,CAAMN,KAAM2B,EAAWG,OAAQ,CAAEN,MAAO,IAAKO,OAAO,IAAKjB,MAAO,2B,GAXzDW,a,gDC0CPO,E,iLAjCP,IADA,IAAIC,EAAe,GACVrC,EAAI,EAAGA,EAAIM,KAAKC,MAAM+B,UAAUC,OAAOtC,OAAQD,IACpDqC,EAAanC,KAAK,kBAACsC,EAAA,EAAD,CAAWpB,MAAM,QAAQqB,MAAO,CAACC,WAAY,SAAUpC,KAAKC,MAAM+B,UAAUC,OAAOvC,KAEzG,IAAI2C,EAAa,GACjB,IAAK3C,EAAI,EAAGA,EAAIM,KAAKC,MAAM+B,UAAUM,KAAK3C,OAAQD,IAAK,CAInD,IAHA,IAAI6C,EAAW,CAAC,kBAACL,EAAA,EAAD,CAAWM,UAAU,KAAKC,MAAM,OAC3CzC,KAAKC,MAAM+B,UAAUM,KAAK5C,GAAG,KAEzBgD,EAAI,EAAGA,EAAI1C,KAAKC,MAAM+B,UAAUM,KAAK5C,GAAGC,OAAQ+C,IACrDH,EAAS3C,KAAK,kBAACsC,EAAA,EAAD,CAAWpB,MAAM,SAAUd,KAAKC,MAAM+B,UAAUM,KAAK5C,GAAGgD,GAAGvB,QAAQ,KAErFkB,EAAWzC,KAAK,kBAAC+C,EAAA,EAAD,CAAUC,IAAK5C,KAAKC,MAAM+B,UAAUM,KAAK5C,GAAG,IAAK6C,IAGrE,OACI,kBAACM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,KAEI,kBAACT,EAAA,EAAD,CAAWC,MAAO,CAACC,WAAY,SAAUpC,KAAKC,MAAM+B,UAAUC,OAAO,IACpEF,IAGT,kBAACiB,EAAA,EAAD,KACKX,S,GA7BCd,a,IC4DX0B,E,iLAXP,IApCsBC,EAoClBzD,EAtDZ,SAA6ByD,GAEzB,IADA,IAAIC,EAAc,GACTzD,EAAI,EAAGA,EAAIwD,EAAW,OAAWvD,OAAQD,IAAK,CAEnD,IADA,IAAI0D,EAAI,GACCV,EAAIQ,EAAW,OAAWvD,OAAS,EAAG+C,GAAK,EAAGA,IACnDU,EAAExD,KAAK,CACHwD,EAAGF,EAAW,OAAWR,GACzBf,EAAGuB,EAAW,KAASxD,GAAGgD,KAGlCS,EAAYvD,KAAK,CACbC,KAAMqD,EAAW,OAAWxD,GAC5BI,KAAMsD,IAGd,OAAOD,EAuCUE,CAAoBrD,KAAKC,MAAMiD,aACxChD,EApCD,CACHC,MAAO,CACH0B,OAAQ,IACRzB,KAAM,WAEVO,WAAY,CACRL,SAAS,EACT6B,MAAO,CACHC,WAAY,SACZ1B,OAAQ,CAAC,UAGjB4C,OAAQ,CACJC,MAAM,GAEV7C,OAAQ,CAAC,WACTK,MAAO,CACHH,MAAO,CACHC,MAnBcqC,EAqCalD,KAAKC,MAAMiD,aAlBrB,aAGzB9B,MAAO,CACHC,WAAY6B,EAAW,OACvBtC,MAAO,CACHC,KAAMqC,EAAW,aAGzBtC,MAAO,CACHC,KAAMqC,EAAW,QASrB,OAAO,kBAAC,IAAD,CACHhD,QAASA,EACTT,OAAQA,EACRW,KAAK,UACLkB,MAAM,Y,GARIC,a,uCCxCtBiC,SAASC,KAAKtB,MAAQ,gCAGtB,IAAMuB,EAAQC,YACV,CACIC,QAAS,CACLC,QAASC,IACTC,UAAWC,OA8EjBC,E,YACF,WAAYhE,GAAQ,IAAD,8BACf,4CAAMA,KACDiE,MAAQ,CAAEpE,KAAM,MAFN,E,sEAKT,IAAD,OACGqE,EAAYnE,KAAKC,MAAjBkE,QACFC,ECtGO,SAACtE,GAGlB,IAAIuE,EAAa,GAmBjB,OAlBY,MAARvE,IACAA,EAAI,OAAWwE,SAAQ,SAACC,GACpBF,EAAWzE,KAAK,kBAAC,EAAD,CAAaoC,UAAWuC,QAG5CzE,EAAI,WAAewE,SAAQ,SAACE,GACxBH,EAAWzE,KAAK,kBAAC,EAAD,CAAWJ,cAAegF,QAG9C1E,EAAI,SAAawE,SAAQ,SAACG,GACtBJ,EAAWzE,KAAK,kBAAC,EAAD,CAASsD,YAAauB,QAG1C3E,EAAI,SAAawE,SAAQ,SAACI,GACtBL,EAAWzE,KAAK,kBAAC,EAAD,CAAS8B,YAAagD,SAIvCL,EDgFaM,CAAM3E,KAAKkE,MAAMpE,MACjC,OAAO,kBAAC8E,EAAA,EAAD,CAAelB,MAAOA,GACzB,yBAAKmB,UAAWV,EAAQW,MACpB,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYL,UAAWV,EAAQvD,MAAOuE,QAAQ,KAAKC,QAAM,GAAzD,sBAGA,2BAAOhF,KAAK,OAAOP,KAAK,OAAOwF,SAAU,SAAAC,GACrC,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAACH,GACb,EAAKI,UAAS,SAACxB,EAAOjE,GACV,GAAoB,MAAhBqF,EAAMK,OACN,MAAO,CAAE7F,KAAM8F,KAAKjB,MAAMW,EAAMK,OAAOE,aAI3DN,EAAOO,WAAWR,EAAMK,OAAOI,MAAM,SAKjD,yBAAKlB,UAAWV,EAAQV,MACpB,yBAAKoB,UAAWV,EAAQ6B,OACnB5B,EAAQ6B,KAAI,SAACC,EAAQxG,GAAT,OACT,kBAACyG,EAAA,EAAD,CAAOC,UAAW,EAAGjE,MAAO,CACxBb,MAAO,OAAQO,OAAQ,OAAQwE,QAAS,OACxCC,OAAQ,QACT1D,IAAKlD,GACHwG,c,GArCfK,IAAMhF,WAoDTiF,eA7HA,SAAA9C,GAAK,MAAK,CACrBoB,KAAM,CACF2B,SAAU,GAEd7F,MAAM,aACF6F,SAAU,EACVC,QAAS,QACRhD,EAAMiD,YAAYC,GAAG,MAAQ,CAC1BF,QAAS,UAGjBG,OAAO,aACH7B,SAAU,WACV8B,aAAcpD,EAAMqD,MAAMD,aAC1BE,gBAAiBC,YAAKvD,EAAME,QAAQsD,OAAOC,MAAO,KAClD,UAAW,CACPH,gBAAiBC,YAAKvD,EAAME,QAAQsD,OAAOC,MAAO,MAEtDC,WAAY,EACZ9F,MAAO,QACNoC,EAAMiD,YAAYC,GAAG,MAAQ,CAC1BQ,WAAY1D,EAAM2D,QAAQ,GAC1B/F,MAAO,SAGfgG,WAAY,CACRhG,MAAOoC,EAAM2D,QAAQ,GACrBxF,OAAQ,OACRmD,SAAU,WACVuC,cAAe,OACfb,QAAS,OACTc,WAAY,SACZC,eAAgB,UAEpBC,UAAW,CACPC,MAAO,WAEXC,WAAW,aACPvB,QAAS3C,EAAM2D,QAAQ,EAAG,EAAG,EAAG,GAChCQ,WAAYnE,EAAMoE,YAAYC,OAAO,SACrCzG,MAAO,QACNoC,EAAMiD,YAAYC,GAAG,MAAQ,CAC1BtF,MAAO,IACP,UAAW,CACPA,MAAO,OAInBmC,KAAM,CACFnC,MAAO,OACPO,OAAQ,OACR4F,eAAgB,SAChBf,QAAS,QAEbV,MAAO,CACHgC,SAAU,SACVP,eAAgB,SAChBD,WAAY,SACZd,QAAS,OACTuB,SAAU,OACV,QAAS,CACL3B,OAAQ5C,EAAM2D,QAAQ,GACtB/F,MAAOoC,EAAM2D,QAAQ,IACrBxF,OAAQ6B,EAAM2D,QAAQ,SA8DnBb,CAAmBvC,GE5IdiE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAShF,SAASiF,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.312012b3.chunk.js","sourcesContent":["import Chart from \"react-apexcharts\";\nimport React, { Component } from \"react\";\n\nfunction createLineChartSeries(lineChartData) {\n    var series = []\n    for (var i = 0; i < lineChartData['series'].length; i++){\n        series.push({\n            name: lineChartData['seriesLabels'][i],\n            data: lineChartData['series'][i]\n        });\n    }\n    return series;\n}\n\nfunction createLineChartOptions(lineChartData) {\n    return {\n        chart: {\n            type: 'line',\n            // height: 350,\n            zoom: {\n                type: 'x',\n                enabled: true,\n                autoScaleYaxis: true\n            },\n            toolbar: {\n                autoSelected: 'zoom'\n            }\n        },\n        colors: ['#2196f3', '#f44336'],\n        dataLabels: {\n            enabled: false\n        },\n        title: {\n            text: lineChartData['title'],\n            align: 'left'\n        },\n        yaxis: {\n            title: {\n                text: lineChartData['yAxisLabel']\n            },\n            labels: {\n                formatter: function (value) {\n                  return value.toFixed(4);\n                }\n              }\n        },\n        xaxis: {\n            categories: lineChartData['catagories'],\n            title: {\n                text: lineChartData['xAxisLabel']\n            },\n        },\n    };\n}\n\nclass LineChart extends Component {\n    render() {\n        var series = createLineChartSeries(this.props.lineChartData);\n        var options = createLineChartOptions(this.props.lineChartData);\n        return <Chart\n            options={options}\n            series={series}\n            type=\"line\"\n            width=\"500\"\n        />\n    };\n}\n\nexport default LineChart;","import React, { Component } from 'react';\nimport Plot from 'react-plotly.js';\n\nclass BoxPlot extends Component {\n    render() {\n        var plot_data = []\n        for (var i = 0; i < this.props.boxPlotData['labels'].length; i++) {\n            plot_data.push({\n                y: this.props.boxPlotData['values'][i],\n                name: this.props.boxPlotData['labels'][i],\n                type: 'box'\n            })\n        }\n\n        return <Plot data={plot_data} layout={{ width: 500, height:350, title: 'Cross-Correlation' }} />;\n    }\n}\n\n\nexport default BoxPlot;","import React, { Component } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nclass MetricTable extends Component {\n\n    render() {\n        var headerLabels = [];\n        for (var i = 1; i < this.props.tableData.header.length; i++) {\n            headerLabels.push(<TableCell align=\"right\" style={{fontWeight: 'bold'}}>{this.props.tableData.header[i]}</TableCell>);\n        }\n        var rowEntries = [];\n        for (i = 0; i < this.props.tableData.rows.length; i++) {\n            var rowEntry = [<TableCell component=\"th\" scope=\"row\">\n                {this.props.tableData.rows[i][0]}\n            </TableCell>];\n            for (var j = 1; j < this.props.tableData.rows[i].length; j++) {\n                rowEntry.push(<TableCell align=\"right\" >{this.props.tableData.rows[i][j].toFixed(4)}</TableCell>);\n            }\n            rowEntries.push(<TableRow key={this.props.tableData.rows[i][0]}>{rowEntry}</TableRow>);\n        }\n\n        return (\n            <TableContainer>\n                <Table>\n                    <TableHead>\n                        <TableRow >\n\n                            <TableCell style={{fontWeight: 'bold'}}>{this.props.tableData.header[0]}</TableCell>\n                            {headerLabels}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rowEntries}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        );\n    }\n}\n\nexport default MetricTable;\n","import Chart from \"react-apexcharts\";\nimport React, { Component } from \"react\";\n\nfunction createHeatMapSeries(heatMapData) {\n    var data_series = [];\n    for (var i = 0; i < heatMapData['labels'].length; i++) {\n        var x = []\n        for (var j = heatMapData['labels'].length - 1; j >= 0; j--) {\n            x.push({\n                x: heatMapData['labels'][j],\n                y: heatMapData['data'][i][j]\n            });\n        }\n        data_series.push({\n            name: heatMapData['labels'][i],\n            data: x,\n        })\n    }\n    return data_series\n}\n\nfunction createHeatMapOptions(heatMapData) {\n    return {\n        chart: {\n            height: 350,\n            type: 'heatmap',\n        },\n        dataLabels: {\n            enabled: true,\n            style: {\n                fontWeight: 'normal',\n                colors: ['#000']\n            },\n        },\n        legend: {\n            show: false,\n        },\n        colors: ['#2196f3'],\n        yaxis: {\n            title: {\n                text: heatMapData['yAxisLabel']\n            },\n        },\n        xaxis: {\n            categories: heatMapData['labels'],\n            title: {\n                text: heatMapData['xAxisLabel']\n            },\n        },\n        title: {\n            text: heatMapData['title']\n        },\n    };\n}\n\nclass HeatMap extends Component {\n    render() {\n        var series = createHeatMapSeries(this.props.heatMapData);\n        var options = createHeatMapOptions(this.props.heatMapData);\n        return <Chart\n            options={options}\n            series={series}\n            type=\"heatmap\"\n            width=\"500\"\n        />\n    }\n}\n\nexport default HeatMap","import React from 'react';\nimport './App.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n// import InputBase from '@material-ui/core/InputBase';\nimport Paper from '@material-ui/core/Paper';\nimport { fade, } from '@material-ui/core/styles';\nimport { parse } from './jsonParser'\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { blue, deepOrange } from '@material-ui/core/colors/';\nimport { withStyles } from '@material-ui/core/styles';\n\ndocument.body.style = 'background: rgb(245,245,245);';\n\n\nconst theme = createMuiTheme(\n    {\n        palette: {\n            primary: blue,\n            secondary: deepOrange,\n        },\n\n    });\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 120,\n            '&:focus': {\n                width: 200,\n            },\n        },\n    },\n    body: {\n        width: '100%',\n        height: '100%',\n        justifyContent: 'center',\n        display: 'flex',\n    },\n    cards: {\n        maxWidth: '2000px',\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(16),\n            height: theme.spacing(16),\n        },\n    }\n});\n\n\n\n\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { data: null };\n    }\n\n    render() {\n        const { classes } = this.props;\n        const figures = parse(this.state.data);\n        return <ThemeProvider theme={theme}>\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography className={classes.title} variant=\"h6\" noWrap>\n                            Performance Report\n                    </Typography>\n                        <input type=\"file\" name=\"file\" onChange={event => {\n                            var reader = new FileReader();\n                            reader.onload = (event) => {\n                                this.setState((state, props) => {\n                                            if (event.target != null) {\n                                                return { data: JSON.parse(event.target.result) };\n                                            }\n                                        });\n                            };\n                            reader.readAsText(event.target.files[0]);\n                        }} />\n\n                    </Toolbar>\n                </AppBar>\n                <div className={classes.body}>\n                    <div className={classes.cards}>\n                        {figures.map((figure, i) =>\n                            <Paper elevation={3} style={{\n                                width: 'auto', height: 'auto', padding: '16px',\n                                margin: '16px'\n                            }} key={i}>\n                                {figure}\n                            </Paper>)}\n                    </div>\n                </div>\n            </div>\n        </ThemeProvider>\n\n            ;\n    }\n}\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport LineChart from './components/lineChart';\nimport BoxPlot from './components/boxPlot';\nimport MetricTable from './components/table';\nimport HeatMap from './components/heatMap';\n\nexport const parse = (data) => {\n    // var data = require(data.json);\n\n    var components = [];\n    if (data != null) {\n        data['tables'].forEach((table) => {\n            components.push(<MetricTable tableData={table} />);\n        });\n\n        data['lineCharts'].forEach((lineChart) => {\n            components.push(<LineChart lineChartData={lineChart} />);\n        });\n\n        data['heatMaps'].forEach((heatMap) => {\n            components.push(<HeatMap heatMapData={heatMap} />);\n        });\n\n        data['boxPlots'].forEach((boxPlot) => {\n            components.push(<BoxPlot boxPlotData={boxPlot} />);\n        });\n    }\n\n    return components\n\n\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}